<div class="table-responsive text-nowrap p-4">
  <h3>Purchase commitments</h3>
  <a class="btn btn-success text-white" href="/generatereport"  >Add New</a>
  <table class="table" id="arrivaltable">
    <thead>
      <tr>
        <th>Date</th>
        <th>Referance</th>
        <th>Id</th>
        <th>Item</th>
        <th>Category</th>
        <th>Weight</th>
        <th>Expected Ep</th>
        <th>Billed EP</th>
        <th>Remaining EP</th>
        <th>Action</th>

      </tr>
    </thead>
    <tbody class="table-border-bottom-0" id="table-body">
      <!-- Data will be populated here -->
    </tbody>
  </table>

</div>

<div id="addpurchasecommitment" class="modal"
  style="display: none; justify-content: center; align-items: center; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5);">
  <div class="modal-content"
    style="background-color: white; padding: 20px; border-radius: 5px; width: 50%;  max-width: 500px; position: relative;">
    <div class="modal-header">
      <h5 class="modal-title" id="modalCenterTitle">Add New Commitments</h5>

    </div>
    <div class="modal-body">
      <div class="row">
        <div class="col mb-3">
          <label for="date" class="form-label">Date</label>
          <input type="date" id="pcdate" name="pcdate" class="form-control" placeholder="Enter Address">

        </div>
        <div class="col mb-3">
          <label for="name" class="form-label">Item</label>
          <input type="text" id="pcitem" name="pcitem" class="form-control" placeholder="Enter Address">

        </div>

      </div>

      <div class="row">
        <div class="col mb-3">
          <label for="image" class="form-label">Reference</label>
          <input type="text" id="pcreference" name="pcreference" class="form-control" placeholder="Enter Address">
        </div>
        <div class="col mb-3">
          <label for="description" class="form-label">Weight</label>
          <input type="text" id="pcweight" name="pcweight" class="form-control" placeholder="Enter Phone">
        </div>

      </div>
      <div class="row">
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Expected EP %</label>
          <input type="text" id="pcep" name="pcep" class="form-control" placeholder="Enter GSTIN">

        </div>
        <div class="col mb-3">
          <label for="highlighted" class="form-label">Rate</label>
          <input type="text" id="pcrate" name="pcrate" class="form-control" placeholder="Enter GSTIN">

        </div>
      </div>

    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-outline-secondary" onclick="closepurchasecommitmentModal()"
        data-bs-dismiss="modal">
        Close
      </button>
      <button onclick="submitpurchasecommitment()" id="submitbutton" class="btn btn-primary">Add Party</button>
    </div>
  </div>
</div>
<script>
 

</script>
<!-- Include Axios library (if not already included) -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Your existing HTML code -->

<script>
  window.individualarrivals = function () {
     
    // var geturl = routeName == 'featured' ? 'featuredpropertieslist' : 'propertieslist'  // Assuming you're passing this variable from EJS
    // var buttonname = routeName == 'featured' ? 'Remove From Featured' : 'Add To Featured'  // Assuming you're passing this variable from EJS

    alTable = $('#arrivaltable').DataTable({
      processing: true,
      serverSide: true,
      ajax: {
        url: 'http://localhost:3000/individualarrivals', // Replace with your API endpoint
        dataSrc: 'data', // Key that holds the array of data in the API response
        data: function (d) {
             d.name = name; // Add the 'name' parameter to the data object
            return d;
          // Add any additional parameters you want to send to the server here
        },
      },
      columns: [
      {
        data: 'date',
        render: function (data, type, row) {
          // Format the date using moment.js
          return moment(data).format('DD/MM/YYYY');
        }
      },
        { data: 'item' },
        { data: 'bags' },
        { data: 'bags' },

        { data: 'qty' },
        { data: 'qty' },
        { data: 'qty' },
        { data: 'qty' },
        { data: 'qty' },
        {
          data: null,
          render: function (data, type, row) {
            return `<div class="dropdown">
                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                  <i class="bx bx-dots-vertical-rounded"></i>
                </button>
                <div class="dropdown-menu">
                  
                  <a class="dropdown-item" href="/backend/editproperties?id=${row._id}"><i class="bx bx-edit me-1"></i> Edit /View </a>
                  <a class="dropdown-item delete-btn" href="javascript:void(0);"><i class="bx bx-trash me-1"></i> Delete</a>
                </div>
              </div>`;
          },
        },
      ],
    });

    // Delete Button Click Event
    function deleteData(id) {
      $.ajax({
        url: `https://www.safehomes.ae/backend/deleteproperty/${id}`,
        type: 'DELETE',
        success: function (response) {
          dataTable.ajax.reload();
        },
        error: function (error) {
          console.error('Error deleting data:', error);
        },
      });
    }

    function toggleFeatured(id, isFeatured) {
      var formDataObj = { id: id, status: isFeatured ? 'notfeatured' : 'featured' };

      $.ajax({
        url: `https://www.safehomes.ae/backend/addfeatured`,
        type: 'POST',
        data: JSON.stringify(formDataObj),
        contentType: 'application/json',
        success: function (response) {
          dataTable.ajax.reload();
        },
        error: function (error) {
          console.error('Error updating data:', error);
        },
      });
    }

    $('#example').on('click', '.delete-btn', function () {
      var data = dataTable.row($(this).closest('tr')).data();
      var id = data._id;
      deleteData(id);
    });

    // $('#example').on('click', '.featured-button', function () {
    //   var data = dataTable.row($(this).closest('tr')).data();
    //   var id = data._id;

    //   if (routeName === 'featured') {
    //     toggleFeatured(id, true); // Remove from Featured
    //   } else if (routeName === 'properties') {
    //     toggleFeatured(id, false); // Add to Featured
    //   }
    // });

  }



  async function submitpurchasecommitment() {
    const pcdate = document.getElementById('pcdate').value;
    const pcitem = document.getElementById('pcitem').value;
    const pcreference = document.getElementById('pcreference').value;
    const pcweight = document.getElementById('pcweight').value;
    const pcep = document.getElementById('pcep').value;
    const pcrate = document.getElementById('pcrate').value;

    const payload = {
      name:name,
      pcdate: pcdate,
      pcitem: pcitem,
      pcreference: pcreference,
      pcweight: pcweight,
      pcep: pcep,
      pcrate: pcrate
    };

    try {
      // Use Axios to make the POST request
      const response = await axios.post('http://localhost:3000/addpurchasecommitment', payload, {
        headers: {
          'Content-Type': 'application/json',
        },
      });

      // Handle the response (you can add your own logic here)

      // Close the modal after server response
      closepurchasecommitmentModal();
      alTable.ajax.reload();

    } catch (error) {
      // Handle errors, such as network issues or server errors
      console.log('Error:', error);
    }
  }
</script>