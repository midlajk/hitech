<div class="table-responsive text-nowrap p-4">
  <h3>Store-Out</h3>
  <table class="table" id="storeoutTable">
    <thead>
      <tr>
        <th>Date</th>
        <th>Item</th>
        <th>LotNumber</th>
        <th>Net Weight</th>
        <th>Net EP %</th>
        <th>Storage Wgt.</th>
        <th>Storage EP</th>
        <th>Action</th>

      </tr>
    </thead>
    <tbody class="table-border-bottom-0" id="table-body">
      <!-- Data will be populated here -->
    </tbody>
  </table>

</div>



<!-- Include Axios library (if not already included) -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Your existing HTML code -->

<script>
  window.individualstoreout = function () {
     
    // var geturl = routeName == 'featured' ? 'featuredpropertieslist' : 'propertieslist'  // Assuming you're passing this variable from EJS
    // var buttonname = routeName == 'featured' ? 'Remove From Featured' : 'Add To Featured'  // Assuming you're passing this variable from EJS

    storeoutTable = $('#storeoutTable').DataTable({
      processing: true,
      serverSide: true,
      ajax: {
        url: 'http://localhost:3000/salesstorages', // Replace with your API endpoint
        dataSrc: 'data', // Key that holds the array of data in the API response
        data: function (d) {
             d.name = name; // Add the 'name' parameter to the data object
            return d;
          // Add any additional parameters you want to send to the server here
        },
        // error: function (xhr, error, thrown) {
        //     console.log('AJAX error: ', error); // Log the error to the console
        //     // You can also display an error message to the user or perform other error handling tasks here
        // }
      },
      columns: [
      {
        data: 'date',
        render: function (data, type, row) {
          // Format the date using moment.js
          return moment(data).format('DD/MM/YYYY');
        }
      }, 
        { data: 'item' },
        { data: 'lotnumber' },
        { data: 'netWeight' },
        { data: 'eppercentage' },
        { data: null,
          render: function (data, type, row) {
            return parseInt((data.storage*100)/data.eppercentage)

          } },
        { data: 'storage' },

        {
          data: null,
          render: function (data, type, row) {
            return `<div class="dropdown">
                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                  <i class="bx bx-dots-vertical-rounded"></i>
                </button>
                <div class="dropdown-menu">
                  <a class="dropdown-item featured-button" href="javascript:void(0);"><i class="bx bx-star me-1"></i>delete</a>
                  <a class="dropdown-item" ><i class="bx bx-edit me-1"></i> Edit /View </a>
                  <a class="dropdown-item delete-btn" href="javascript:void(0);"><i class="bx bx-trash me-1"></i> Delete</a>
                </div>
              </div>`;
          },
        },
      ],
    });

   

  }



</script>